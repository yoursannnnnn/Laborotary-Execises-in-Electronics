#include <msp430g2202.h>

void time_engine(unsigned char time_instant_in_seconds);
void indication(unsigned char digit12, unsigned char digit34, unsigned char which_digit);
void delay(unsigned long ms);
void display(unsigned char digit);
unsigned char seconds=0;
unsigned char minutes=0;
unsigned char hours=0;
unsigned char blink_digit = 0;


int main(void)

{
  WDTCTL = WDTPW + WDTHOLD;
  BCSCTL1 = CALBC1_12MHZ;
  DCOCTL = CALDCO_12MHZ;
  
  P1DIR |=  0xFF;
  P2DIR |=  0x0F;
  P2OUT &= ~0x0F;
  //P2OUT |=  0x04;
  P2DIR &=  ~0x30;
  P2IES |=  0x30;
  P2IES &= ~0x30;
  P2IFG &= ~0x30;
  P2IE  |=  0x30;
  
  __enable_interrupt();

  unsigned char j;
  unsigned int j2=0;
  unsigned char digit_position;

  for (;;)
{
  j2++;
  if (j2 == 1000)
  {
    j2 = 0;
    time_engine(1);
  }

  digit_position = (digit_position + 1) % 4;
  indication(minutes, seconds, digit_position);
  delay(100);
}

  
}
void display(unsigned char digit)
{
  if (digit==0) P1OUT = 0xF5;
  if (digit==1) P1OUT = 0x05;
  if (digit==2) P1OUT = 0x73;
  if (digit==3) P1OUT = 0x57;
  if (digit==4) P1OUT = 0x87;
  if (digit==5) P1OUT = 0xD6;
  if (digit==6) P1OUT = 0xF6;
  if (digit==7) P1OUT = 0x45;
  if (digit==8) P1OUT = 0xF7;
  if (digit==9) P1OUT = 0xD7;
}

void delay(unsigned long ms)
{
  unsigned long ims;
  for(ims=0; ims<ms;ims++)
  {
    __delay_cycles(120);
  }
}

void indication(unsigned char digit12, unsigned char digit34, unsigned char which_digit)
{
  P2OUT &= ~0x0F;
  display(seconds);
  display(minutes);

  if (which_digit == 0) { display(digit12 / 10); P2OUT = 0x01; }
  if (which_digit == 1) { display(digit12 % 10); P2OUT = 0x02; }
  if (which_digit == 2) { display(digit34 / 10); P2OUT = 0x04; }
  if (which_digit == 3) { display(digit34 % 10); P2OUT = 0x08; }

  unsigned int mode = 0;
  unsigned int j2 = 0;
  unsigned char digit_position = 0;

  if (mode == 0)
  {
    if ((mode == 0)&&(mode == 1))
    {
      P1DIR = 0x08;
      if (j2 > 500)
      {
        digit_position |= BIT4;
        blink_digit = 1;
      }
      else
      {
        blink_digit = 0;
      }
    }
  }
  else if (mode == 1)
  {
    indication(minutes, seconds, digit_position);
  }

  if (blink_digit)
  {
    P1OUT ^= BIT4;
  }
}

void time_engine(unsigned char time_instant_in_seconds)
{
  seconds = seconds + time_instant_in_seconds;
  if (seconds==60)
  {
    seconds = 0; minutes++;
  }
  if (minutes==60)
  {
    minutes = 0; hours++;
  }
}
#pragma vector = PORT2_VECTOR
__interrupt void P2_ISR(void)
{
  if ((P2IFG & BIT5) == BIT5)
  {
    P2IFG &= ~BIT5;
  }
  if ((P2IFG & BIT4) == BIT4)
  {
    P2IFG &= ~BIT4;
  }
}
